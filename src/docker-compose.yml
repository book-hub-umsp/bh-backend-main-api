services:
  booksservice:
    container_name: booksservice_container
    image: ${DOCKER_REGISTRY-}booksservice
    build:
      context: src
      dockerfile: ../docker/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      # - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - 4001:8080
      # - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
  postgres:
    container_name: postgres_container
    image: postgres:14
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    ports:
     - 4002:5432
    # restart: unless-stopped
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1'
    #       memory: 4G
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "root"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      # - ./migration:/docker-entrypoint-initdb.d/
      - habrdb-data:/var/lib/postgresql/data
    networks:
      - postgres
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "main@main.com"
      PGADMIN_DEFAULT_PASSWORD: "master"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "4003:80"
    restart: unless-stopped
    networks:
      - postgres

volumes:
  habrdb-data:
  pgadmin-data:

networks:
  postgres:
    driver: bridge
